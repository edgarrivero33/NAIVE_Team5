# -*- coding: utf-8 -*-
"""MatchingHackathon.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uWxf3wr2yvdCROlq5WlOZu0VBRz1zROj
"""

import openpyxl
import json
import csv
import numpy as np

#Function to search if there are repeating matches
def search(list, platform):
    for i in range(len(list)):
        if list[i] == platform:
            return True
    return False

#opening file    
wb = openpyxl.load_workbook("Output - Preference Matrix.xlsx")
ws = wb.active

#list to work with
filteredData = []
j = 0
managerCol = []

#lists to hold Intern and Manager Matches by priority
megaList = []
perfectMatches = []
matchTwo = []
matchThree = []
matchFour = []
matchFive = []
matchSix = []
matchSeven = []
matchEight = []
matchNine = []
matchTen = []
noResults = []

#Creates Manager List 
for col in ws.iter_cols(values_only=True):
  managerCol = col
  break
#Priority One
for col in ws.iter_cols(values_only=True):
  currentCol = []
  k = 0
  for i in col:
    if i == 'M1,P1':
      perfectMatches.append(col[0])
      perfectMatches.append(managerCol[k])
    k += 1
  k = 0
  #Priority Two
  for i in col:
    if i == 'M1,P2' or i =='M2,P1':
      if not search(perfectMatches, col[0]):
        matchTwo.append(col[0])
        matchTwo.append(managerCol[k])
        #del participantsNotMatched.index(participantsNotMatched[col[0]])
    k += 1
  k = 0
  #Priority Three
  for i in col:
    if i == 'M2,P2':
      if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]):
        matchThree.append(col[0])
        matchThree.append(managerCol[k])
    k += 1
  k = 0
  #Priority Four
  for i in col:
    if i == 'M1,P3' or i == 'M3,P1':
      if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]) \
      and not search(matchThree, col[0]):
        matchFour.append(col[0])
        matchFour.append(managerCol[k])
    k += 1
  k = 0
  #Priority Five
  for i in col:
    if i == 'M2,P3' or i == 'M3,P2':
      if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]) \
      and not search(matchThree, col[0]) and not search(matchFour, col[0]):
        matchFive.append(col[0])
        matchFive.append(managerCol[k])
    k += 1
  k = 0
  #Priority Six
  for i in col:
    if i == 'M3,P3':
      if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]) \
      and not search(matchThree, col[0]) and not search(matchFour, col[0]) \
      and not search(matchFive, col[0]):
        matchSix.append(col[0])
        matchSix.append(managerCol[k])
    k += 1
  k = 0
  #Priority Seven
  for i in col:
    if i == 'M1,P4' or i == 'M4,P1':
      if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]) \
      and not search(matchThree, col[0]) and not search(matchFour, col[0])\
      and not search(matchFive, col[0]) and not search(matchSix, col[0]):
        matchSeven.append(col[0])
        matchSeven.append(managerCol[k])
    k += 1
  k = 0
  #Priority Eight
  for i in col:
    if i == 'M2,P4' or i == 'M4,P2':
      if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]) \
      and not search(matchThree, col[0]) and not search(matchFour, col[0]) \
      and not search(matchFive, col[0]) and not search(matchSix, col[0]) \
      and not search(matchSeven, col[0]):
        matchEight.append(col[0])
        matchEight.append(managerCol[k])
    k += 1
  k = 0
  #Priority Nine
  for i in col:
    if i == 'M3,P4' or i == 'M4,P3':
      if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]) \
      and not search(matchThree, col[0]) and not search(matchFour, col[0]) \
      and not search(matchFive, col[0]) and not search(matchSix, col[0]) \
      and not search(matchSeven, col[0]) and not search(matchEight, col[0]):
        matchNine.append(col[0])
        matchNine.append(managerCol[k])
    k += 1
  k = 0  
  #Priority Ten
  for i in col:
    if i == 'M4,P4':
      if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]) \
      and not search(matchThree, col[0]) and not search(matchFour, col[0]) \
      and not search(matchFive, col[0]) and not search(matchSix, col[0]) \
      and not search(matchSeven, col[0]) and not search(matchEight, col[0]) \
      and not search(matchNine, col[0]):
        matchTen.append(col[0])
        matchTen.append(managerCol[k])
    k += 1
  k = 0

  #No Matches
  for i in col:
    if not search(matchTwo, col[0]) and not search(perfectMatches, col[0]) \
    and not search(matchThree, col[0]) and not search(matchFour, col[0]) \
    and not search(matchFive, col[0]) and not search(matchSix, col[0]) \
    and not search(matchSeven, col[0]) and not search(matchEight, col[0]) \
    and not search(matchNine, col[0]) and not search(matchTen, col[0]) \
    and not search(noResults,col[0]) and col[0] != None:
      noResults.append(col[0])
        # noResults.append(managerCol[k])
    k += 1
  k = 0       


# print("Perfect Matches",perfectMatches)
# print("Second Priority",matchTwo)
# print("Third Priority",matchThree)
# print("Fourth Priority",matchFour)
# print("Fifth Priority",matchFive)
# print("Sixth Priority",matchSix)
# print("Seventh Priority",matchSeven)
# print("Eighth Priority",matchEight) 
# print("Nine Priority",matchNine) 
# print("Tenth Priority",matchTen) 
# print("No results",noResults)

bigboylist = perfectMatches + matchTwo + matchThree + matchFour + matchFive + matchSix + matchSeven + matchEight + matchNine + matchTen #+ noResults
# This filters out submission numbers
# for i in range(len(bigboylist)):
#   word = bigboylist[i]
#   if word.find('_') >= 0:
#     word = word[0:word.find('_')]
#     bigboylist[i] = word
bigboylist2 = []
print(len(bigboylist))
for i in range(len(bigboylist)):
  if i % 2 == 0:
    templist = []
    templist.append(bigboylist[i])
    templist.append(bigboylist[i+1])
    bigboylist2.append(templist)

print(bigboylist2)
#Every pair is a a participant followed by a manager
#print(bigboylist)

#creates matched list in json format
json_string = json.dumps(bigboylist)
print("Completed List of matches",json_string)
with open('new_filename.json','w') as f:
  json.dump(bigboylist, f, indent = 2)
  print("done")

#creates matched list in csv format
fields = ['Participant', 'Manager']
with open('data.csv', 'w') as f:
  write = csv.writer(f)
  write.writerow(fields)
  write.writerows(bigboylist2)